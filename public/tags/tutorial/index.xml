<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on sesa blog</title>
    <link>https://data-se.netlify.app/tags/tutorial/</link>
    <description>Recent content in tutorial on sesa blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 May 2022 09:52:34 +0000</lastBuildDate><atom:link href="https://data-se.netlify.app/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A simple solution to ditch the question &#34;what&#39;s the path of my data&#34; when importing data to R</title>
      <link>https://data-se.netlify.app/2022/05/11/a-simple-solution-to-ditch-the-question-what-s-the-path-of-my-data-when-importing-data-to-r/</link>
      <pubDate>Wed, 11 May 2022 09:52:34 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/05/11/a-simple-solution-to-ditch-the-question-what-s-the-path-of-my-data-when-importing-data-to-r/</guid>
      <description>Load packages library(tidyverse) Motivation: Get your data into R, different ways Importing data into R can cause headaches for newbies. For some, the concept of relative and absolute paths is new. That’s why I compiled here some recommendations on how to important data into R and on how to ditch the “what’s my path” problem.
Pragmatic goal If you are in a hurry, just pick one way, maybe the first approach.</description>
    </item>
    
    <item>
      <title>Importing data into R</title>
      <link>https://data-se.netlify.app/2022/05/11/importing-data-into-r/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/05/11/importing-data-into-r/</guid>
      <description>1 Load packages 2 Motivation: Get your data into R, different ways 3 Pragmatic goal 4 Approach 1: Quick and easy 5 Approach 2: Start an RStudio project 6 Approach 3: Import from an online source 7 Approach 4: Learn what a path means 8 Example time – dataset tips 1 Load packages library(tidyverse) 2 Motivation: Get your data into R, different ways Importing data into R can cause headaches for newbies.</description>
    </item>
    
    <item>
      <title>Rowwise NA</title>
      <link>https://data-se.netlify.app/2022/05/09/rowwise-na/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/05/09/rowwise-na/</guid>
      <description>1 Load packages 2 Sample data 3 Count NA rowwise 4 Way 1: rowwise sum with mutate and c_across 5 Way 2: apply() with margin 1 6 Way 3: rowSums 7 Way 4: cur_data() 8 Why not map()? 9 Reproducibility 1 Load packages library(tidyverse) # data wrangling 2 Sample data data(&amp;quot;mtcars&amp;quot;) Create some NA:
mtcars$mpg[c(1,2,3)] &amp;lt;- NA mtcars$hp[c(1,2,3)] &amp;lt;- NA 3 Count NA rowwise What we would like to achieve is to comfortable count the missing values per row.</description>
    </item>
    
    <item>
      <title>Empirische Verteilungsfunktion</title>
      <link>https://data-se.netlify.app/2022/05/02/empirische-verteilungsfunktion/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/05/02/empirische-verteilungsfunktion/</guid>
      <description>1 R-Pakete 2 Hintergrund 3 Verteilungsfunktion der Normalverteilung 4 Empirische Verteilungsfunktion 4.1 Tidyverse 4.1.1 Tidyverse 1 4.1.2 Tidyverse 2 4.1.3 Plotten der ECDF 4.1.4 Quantile 4.2 Base R 4.2.1 Quantile 4.2.2 ECDF 4.2.3 Plot 4.3 Mosaic 4.3.1 ECDF 4.3.2 Quantile 5 Reproducibility 1 R-Pakete library(tidyverse) # data wrangling theme_set(theme_minimal()) # Stylesheet für ggplot2 2 Hintergrund Will man eine Verteilung untersuchen, sind Verteilungsfunktion \(F\) und Quantilsfunktion \(F^{-1}\) wichtige Größen. Nicht nur für theoretische, sondern auch für empirische Verteilungen kann man diese Funktionen anwenden.</description>
    </item>
    
    <item>
      <title>Kontigenztabellen in R</title>
      <link>https://data-se.netlify.app/2022/05/02/kontigenztabellen-in-r/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/05/02/kontigenztabellen-in-r/</guid>
      <description>1 Pakete und Daten 2 Häufigkeiten berechnen 2.1 Tidyverse 2.1.1 Univariat 2.1.2 Bivariat 2.1.3 Bezogen auf was? 2.1.4 Kontingenztabelle durch Pivotieren 2.2 Easystats 2.3 sjmisc 2.3.1 Kontingenztabelle 2.3.2 Anteile 2.3.3 Kontingenztabelle gruppiert 2.4 Base R 2.4.1 Kontingenztabelle 2.4.2 ftable 2.4.3 Anteile 3 Schöne Tabellen in html 3.1 gt 3.1.1 flat_table 3.1.2 pivot_wider 4 Exportieren 4.1 Export als CSV- oder XLSX-Datei 4.1.1 CSV für Excel 4.1.2 Deutsch formatierte Excel-CSV 4.1.3 XLSX-Datei 4.</description>
    </item>
    
    <item>
      <title>3D Regression plane with scatter plot</title>
      <link>https://data-se.netlify.app/2022/04/19/3d-regression-plane-with-scatter-plot/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/04/19/3d-regression-plane-with-scatter-plot/</guid>
      <description>1 Load packages 2 Define model 3 Define grid for regression plane 4 Scatter Plot 5 Scatter plot with 3D surface 6 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(plotly) # 3D plot interactive 2 Define model Here’s the linear model with 2 predictors, giving us a model that can be visualized in 3D:
lm1 &amp;lt;- lm(mpg ~ hp + disp, data = mtcars) As is standard, we’ll predict mpg.</description>
    </item>
    
    <item>
      <title>Das arithmetische Mittel minimiert die Abweichungsquadrate</title>
      <link>https://data-se.netlify.app/2022/04/08/mittelwert-minimiert-abweichungsquadrate/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/04/08/mittelwert-minimiert-abweichungsquadrate/</guid>
      <description>1 Behauptung 2 Beweis 3 Quellen 1 Behauptung Das arithmetische Mittel \(\bar{x}=\frac{1}{n}\sum_{i=1}^n x_i\) minimiert die Abweichungsquadrate der \(x_i\) zu einem Wert \(c\), eben der ist das arithmetische Mittel:
\(\text{arg min}_c \sum_{i=1}^n(x_i - c)^2\).
Mit anderen Worten: Es gibt keine andere Zahl, für die obige Summe einen kleineren Wert liefert, so die Behauptung.
Nennen wir die Summe der Abweichungsquadrate \(s(c) = \sum_{i=1}^n(x_i -c)^2\).
2 Beweis \[ \begin{aligned} s(c) &amp;amp;= \sum_{i=1}^n (x_i -c)^2 \\ &amp;amp;= \sum_{i=1}^n (x_i^2 - 2x_ic + c^2) \\ &amp;amp;= \sum_{i=1}^n x_i^2 - \sum_{i=1}^n 2x_ic + \sum_{i=1}^n c^2 \\ &amp;amp;= \sum_{i=1}^n x_i^2 - 2c \sum_{i=1}^n x_i + n c^2 \end{aligned} \]</description>
    </item>
    
    <item>
      <title>Median minimiert Absolutabweichungen</title>
      <link>https://data-se.netlify.app/2022/04/08/median-minimiert-absolutabweichungen/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/04/08/median-minimiert-absolutabweichungen/</guid>
      <description>1 Behauptung 2 Beweis 1 3 Beweis 2 4 Quellen 5 Reproducibility library(tidyverse) 1 Behauptung Der Median \(md\) minimiert die Absolutabweichungen der \(x_i\) zu einem Wert \(c\), eben der ist Median:
\(\text{arg min}_c \sum_{i=1}^n|(x_i - c)|\).
Mit anderen Worten: Es gibt keine andere Zahl, für die obige Summe einen kleineren Wert liefert, so die Behauptung.
Nennen wir die Summe der Absolutabweichungen \(e(c) = \sum_{i=1}^n|(x_i - c)|\).
2 Beweis 1 Betrachten wir zwei reelle Zahlen, \(a &amp;lt; b\).</description>
    </item>
    
    <item>
      <title>How to import GoogleSheets into R</title>
      <link>https://data-se.netlify.app/2022/04/02/how-to-import-googlesheets-into-r/</link>
      <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/04/02/how-to-import-googlesheets-into-r/</guid>
      <description>1 Load packages 2 Motivation 3 Find your GoogleSheets File 4 Authentificate 5 Read it 6 Check 7 Rename 8 Some caveats 9 Further reading 10 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(googlesheets4) # GSheets API library(gt) # html tables 2 Motivation Data sharing is of primary concern for science and, increasingly, technology. Whereas there are specialized repositories for data storage and exchange (which are very useful), at times more quick and dirty solutions are desirable.</description>
    </item>
    
    <item>
      <title>Visualizing variation in data, simple ideas</title>
      <link>https://data-se.netlify.app/2022/04/02/visualizing-variation-in-data-simple-ideas/</link>
      <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/04/02/visualizing-variation-in-data-simple-ideas/</guid>
      <description>1 Load packages 2 Simulate data 3 Plot 1 4 Plot 2 5 Plot 3 6 Plot 4 7 Reproducibility 1 Load packages library(tidyverse) # data wrangling 2 Simulate data low_spread &amp;lt;- tibble(var = rnorm(n = 100), id = 1:100, type = &amp;quot;low spread&amp;quot;) high_spread &amp;lt;- tibble(var= rnorm(n = 100, sd = 10), id = 1:100, type = &amp;quot;high spread&amp;quot;) d &amp;lt;- low_spread %&amp;gt;% bind_rows(high_spread) 3 Plot 1 ggplot(d) + aes(x = id, y = var) + facet_wrap(~ type) + geom_hline(yintercept = 0, color = &amp;quot;grey40&amp;quot;) + geom_point() + theme_minimal() 4 Plot 2 ggplot(d) + aes(x = type, y = var) + geom_boxplot() 5 Plot 3 ggplot(d) + aes(x = var, fill = type) + geom_density(alpha = .</description>
    </item>
    
    <item>
      <title>Programming the tidyverse: quoted and unqouted parameters</title>
      <link>https://data-se.netlify.app/2022/03/11/programming-the-tidyverse-quoted-and-unqouted-parameters/</link>
      <pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/03/11/programming-the-tidyverse-quoted-and-unqouted-parameters/</guid>
      <description>1 Load packages 2 Motivation 3 First: Quoted (string) parameter 4 Second: Unquoted parameter 5 Check 6 Bonus 1 Load packages library(tidyverse) # data wrangling 2 Motivation If a project reaches some level of complexity, sooner or later, more systematical meausures of coding need to be employed.
Using the tidyverse ecosystem, programming - instead of interactive use - may be something different or unusual and it may take some time to wrap your head around it.</description>
    </item>
    
    <item>
      <title>tidyeval, some musings on dplyr::filter</title>
      <link>https://data-se.netlify.app/2022/02/09/tidyeval-some-musings-on-dplyr-filter/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/02/09/tidyeval-some-musings-on-dplyr-filter/</guid>
      <description>Programming with the tidyverse … Is not exactly self-evident. It actually requires some head wrapping, at least in my experience. In this post, we are exploring some aspects on programming when filtering rows. Let’s see.
Setup library(tidyverse) Some filtering chunk Let’s say we would like to filter observations according to some variable and a given threshold in some data set:
mtcars %&amp;gt;% filter(hp &amp;gt; 200) ## mpg cyl disp hp drat wt qsec vs am gear carb ## Duster 360 14.</description>
    </item>
    
    <item>
      <title>Erbie: Einfache, reproduzierbare Beispiele Ihres Problems mit (R-)Syntax</title>
      <link>https://data-se.netlify.app/2022/01/31/erbie-einfache-reproduzierbare-beispiele-ihres-problems-mit-r-syntax/</link>
      <pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/01/31/erbie-einfache-reproduzierbare-beispiele-ihres-problems-mit-r-syntax/</guid>
      <description>Hilfe, mein R läuft nicht? Was soll ich tun? Angenommen, Sie haben ein Problem mit R … Oder präzisieren wir, Sie haben ein Problem mit einer bestimmten R-Syntax (ob R auch ein Problem mit uns haben kann, ist nicht bekannt).
Jedenfall wollen Sie, dass R etwas bestimmtes tut. Macht es aber nicht. Jetzt könnte man es mit anschreien versuchen; Maschinen lassen das geduldig über sich ergehen. Man könnte den Computer zum Fenster rausschmeißen, das könnte auch Erleichterung bringen … Dem hab ich’s jetzt mal richtig gezeigt.</description>
    </item>
    
    <item>
      <title>Bayes-Software installieren für R</title>
      <link>https://data-se.netlify.app/2022/01/28/bayes-software-installieren-f%C3%BCr-r/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/01/28/bayes-software-installieren-f%C3%BCr-r/</guid>
      <description>R und seine Freunde installieren. Schauen Sie, dass Sie zuerst R und seine Freunde installiert haben.
Bayes-Software Bayes-Inferenz kann rechenintensiv sein. Daher braucht’s Software, die schnell rechnen kann. Außerdem sollte die Software sich gut mit Wahrscheinlichkeitsrechnung auskennen, denn Bayes ist nichts anderes als angewandte Wahrscheinlichkeitsrechnung.
Aktuell ist die Software Stan die führende Software für diesen Zweck.
Bevor Sie aber Stan installieren können, brauchen Sie eine (Software für eine) “schnelle Rechenmaschine” auf Ihrem Computer installiert.</description>
    </item>
    
    <item>
      <title>Kurs &#34;Bayes:Start&#34;</title>
      <link>https://data-se.netlify.app/2022/01/28/kurs-bayes-start/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/01/28/kurs-bayes-start/</guid>
      <description>Bayes lernen Sie möchten (oder müssen) Bayes lernen? Hier ist ein Kurs dazu.
Alle Materialien des Kurses sind frei verfügbar, können kostenfrei genutzt werden und sind quelloffen.</description>
    </item>
    
    <item>
      <title>Kurs: &#34;Vorhersage-Modellierung&#34;</title>
      <link>https://data-se.netlify.app/2022/01/28/kurs-vorhersage-modellierung/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/01/28/kurs-vorhersage-modellierung/</guid>
      <description>Einführung in die Vorhersage-Modellierung 🔮 Ein Kurs zur Grundlagen der Datenanalyse und der Vorhersage-Modellierung mit R.
Hier geht es zum Kurs.
Alle Materialien des Kurses sind frei verfügbar, können kostenfrei genutzt werden und sind quelloffen.</description>
    </item>
    
    <item>
      <title>Wissenschaftliche Notation in R an und ausstellen</title>
      <link>https://data-se.netlify.app/2022/01/28/wissenschaftliche-notation-in-r-an-und-ausstellen/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/01/28/wissenschaftliche-notation-in-r-an-und-ausstellen/</guid>
      <description>Wissenschaftliche Notation, was is das? Zahlen können in der “fixierten” oder normalen Notation geschrieben sein:
1 ## [1] 1 oder
10 ## [1] 10 und so weiter.
Die sog. wissenschaftliche Notation von Zahlen sieht so aus:
## [1] 1e+15 Die wissenschaftliche Notation dieser großen Zahl sagt uns: “Das ist eine Zahl, die mit der Ziffer 1 beginnt und dann folgen 15 Nullen”.
Das e steht für Exponent. Eigentlich nutzt der Computer die typische Taschenrechner-Schreibweise, von dem, was in der Mathe so geschrieben würde:</description>
    </item>
    
    <item>
      <title>Installation von R und seiner Freunde</title>
      <link>https://data-se.netlify.app/2021/11/30/installation-von-r-und-seiner-freunde/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/11/30/installation-von-r-und-seiner-freunde/</guid>
      <description>1 Überblick 2 Versions-Infos und Update 3 Installation 3.1 R 3.2 RStudio 3.3 RStudio Cloud 3.3.1 Konto anlegen 3.3.2 Projekte 3.4 R-Pakete 3.4.1 Was sind R-Pakete? 3.4.2 Welche R-Pakete brauche ich? 3.5 Hinweise 4 Wenn nichts mehr hilft … 1 Überblick Wir wollen uns hier nicht mit Fragen beschäftigen Warum R? (und auch nicht mit Warum, R?). Stattdessen soll Ihnen diese Seite helfen, R und was sonst noch so dazu gehört, zu installieren.</description>
    </item>
    
    <item>
      <title>Analyse einiger RKI-Coronadaten: Eine reproduzierbare Fallstudie</title>
      <link>https://data-se.netlify.app/2021/11/27/analyse-der-rki-coronadaten/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/11/27/analyse-der-rki-coronadaten/</guid>
      <description>1 R-Pakete 2 Hintergrund 3 Inzidenzen in Deutschland - Daten vom RKI 4 Hospitalisierungen in Deutschland 4.1 Adjustierte Daten 4.1.1 Daten importieren 4.1.2 EDA 4.2 Unadjustierte Daten 4.2.1 Daten importieren 4.2.2 EDA 5 Impfungen in Deutschland 5.1 Neueste Daten 5.1.1 Daten laden 5.1.2 EDA 5.2 Impfquoten im Zeitverlauf 5.2.1 Daten laden 1 5.2.2 Daten laden 2 5.3 EDA 5.3.1 Impfquote Deutschland im Zeitverlauf 5.3.2 Impfquote der Bundesländer im Zeitverlauf 6 Daten joinen 7 Zusammenhangsanalysen 7.</description>
    </item>
    
    <item>
      <title>Jedes dritte Corona-Tote ist geimpft, also bringt Impfen nix? Falsch.</title>
      <link>https://data-se.netlify.app/2021/11/15/jedes-dritte-intensivbett-mit-geimpften-belegt-also-bringt-impfen-nix-falsch/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/11/15/jedes-dritte-intensivbett-mit-geimpften-belegt-also-bringt-impfen-nix-falsch/</guid>
      <description>1 Der dritte Corona-Tote geimpft?! 2 tl;dr 3 Frage: Wie viele Menschen mit Corona wurden ins Krankenhaus eingeliefert? 4 Antwort: Hospitalisierungsquoten lagen jüngst zwischen 1% und 15% 5 Frage: Ist jede Dritte Corona-Tote geimpft? 6 Antwort: Ja, diese Zahl stimmt oder ist höher 7 Frage: Wenn es so viele geimpfte Corona-Opfer gibt, dann ist die Impfung also kaum wirksam? 8 Antwort: Der Anteil der Impfdurchbrüche ist abhängig von der Impfquote 9 Frage: Wie hoch ist die Impfquote unter den Coronatoten?</description>
    </item>
    
    <item>
      <title>Metadaten von Forschungsartikeln herunterladen</title>
      <link>https://data-se.netlify.app/2021/07/08/metadaten-von-forschungsartikeln-herunterladen/</link>
      <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/07/08/metadaten-von-forschungsartikeln-herunterladen/</guid>
      <description>1 Vorbereitung 2 Via Crossref 2.1 Abfragen, einfach 3 Filter 3.1 Anzahl 4 Dois rausziehen 5 Zitationen herunterladen 6 Abstracts herunterladen 6.1 “Safely” Abstracts herunterladen 6.2 Artikel nur mit Abstracts 6.3 Abstract mit cr_abstract 6.4 Check 6.5 Auf einen Haps 7 Andere APIs 7.1 Google Scholar hat keine API, wie es aussieht 7.1.1 Weitere API 1 Vorbereitung library(tidyverse) library(printr) library(rcrossref) library(gt) 2 Via Crossref Von der Crossref-Webseite:
Crossref makes research outputs easy to find, cite, link, assess, and reuse.</description>
    </item>
    
    <item>
      <title>Zeitungsartikel per API herunterladen</title>
      <link>https://data-se.netlify.app/2021/07/07/zeitungsartikel-per-api-herunterladen/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/07/07/zeitungsartikel-per-api-herunterladen/</guid>
      <description>library(tidyverse) library(newsanchor) library(printr) library(httr) library(jsonlite) News API Es gibt eine Seite News API, die es erlaubt, per API News (Artikel, Schlagzeilen) von weltweiten Quellen herunterzuladen, per JSON API.
Gibt’s da auch ein R-Paket? Ja - NewsAnchor.
Setup Zuerst muss man sich bei der Seite eine API Key holen, für Entwicklerzwecke kostenlos. Komfortabel ist, sich den Schlüssel in die R-environment-Datei (.Renviron) zu schreiben, s. hier für mehr Infos.
Das kann man z.</description>
    </item>
    
    <item>
      <title>Diagrams with mermaid</title>
      <link>https://data-se.netlify.app/2021/07/01/diagrams-with-mermaid/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/07/01/diagrams-with-mermaid/</guid>
      <description>Setup library(tidyverse) library(DiagrammeR) Separating concept and appeal It can be useful to separate the content or concept from its graphical/visual implementation. For this reasons, slide shows have disadvantages: You spend a lot of time dragging arrows and boxes. This time would be better spend in thinking about why and where to move your arrows and boxes.
In addition, software that intermingles concept and representation typically is a vendor lock: You cannot (easily) get out if you find some more useful softare.</description>
    </item>
    
    <item>
      <title>Talent and Looks -- Collider bias</title>
      <link>https://data-se.netlify.app/2021/06/24/talent-and-looks-collider-bias/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/24/talent-and-looks-collider-bias/</guid>
      <description>Background Some musing on the collider bias.
Let’s try to reverse engineer this image
Setup library(tidyverse) library(ggdag) Simulate some data n &amp;lt;- 1000 d &amp;lt;- tibble( x = rnorm(n, mean = 0, sd = 1), y = rnorm(n, mean = 0, sd = 1), e = rnorm(n, mean = 0, sd = 0.3), z = abs(x) * abs(y)) d: Uncorrelated data The farer from the centroid the lighter the color.</description>
    </item>
    
    <item>
      <title>Rücktransformation logarithmierter y-Werte</title>
      <link>https://data-se.netlify.app/2021/06/18/r%C3%BCcktransformation-logarithmierter-y-werte/</link>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/18/r%C3%BCcktransformation-logarithmierter-y-werte/</guid>
      <description>1 Kontext 2 Vorbereitung 3 LogY-LogX-Modell 4 Modell 1 5 Vorhersage zum Beispiel aus der Fallstudie 6 Vorhersagen wie im Prognose-Wettbewerb 7 Check 1 Kontext Dieser Post bezieht sich auf diese Fallstudie.
2 Vorbereitung library(tidyverse) # Datenjudo ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.4 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.</description>
    </item>
    
    <item>
      <title>Beispiel zur Interpretation des Interaktionseffekts</title>
      <link>https://data-se.netlify.app/2021/06/17/beispiel-zur-interpretation-des-interaktionseffekts/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/17/beispiel-zur-interpretation-des-interaktionseffekts/</guid>
      <description>1 Der Interaktionseffekt in der Regressionsanalyse 2 Vorbereitung 3 Regression mit Interaktionseffekt, die Erste 3.1 z-Transformation des Prädiktors hp 3.2 lm1 4 Regression mit Interaktionseffekt, die Zweite 4.1 Daten 4.2 Ohne z-Transformation 4.3 Mit z-Transformation 4.4 Visualisierung 4.5 Interpretation zum Vorhandensein eines Interpretationseffekts 4.6 Interpretation der Koeffizienten 4.7 Viel besser mit z-Transformation 4.8 Berechnen eines vorhergesagten Wertes mit der Hand 5 Fazit 1 Der Interaktionseffekt in der Regressionsanalyse Der Interaktionseffekt in der Regressionsanalyse ist nicht einfach zu interpretieren.</description>
    </item>
    
    <item>
      <title>ARM, Kap. 4 Syntax im Tidyverse-Stil</title>
      <link>https://data-se.netlify.app/2021/06/15/arm-kap-4-syntax-im-tidyverse-stil/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/15/arm-kap-4-syntax-im-tidyverse-stil/</guid>
      <description>1 Pakete laden 2 Lineare Transformationen 2.1 Daten laden: kidsiq 2.2 lm1: Interaktionseffekt 2.3 lm2: Zentrieren 2.4 lm3: z-Transformation 3 Modelle mit log(y) 3.1 Daten laden 3.2 lm4: earn_log 3.3 lm5: earn_log mit zwei Prädiktoren 3.4 lm6: Mit z-Transformation und Interaktion 4 LogY-LogX-Modelle 5 Weitere Transformationen 5.1 Diskretisierung metrischer Prädiktoren 6 “Buschbeispiel” - mesquite 6.1 Daten laden 6.2 Lineares Modell mit allen Prädiktoren 6.3 Multiplikatives Modell 7 Referenz 1 Pakete laden library(tidyverse) library(arm) # nicht wirklich wichtig, nur für Funktion &amp;quot;display&amp;quot; library(foreign) library(rio) 2 Lineare Transformationen 2.</description>
    </item>
    
    <item>
      <title>Vektorisierter Mittelwert in R</title>
      <link>https://data-se.netlify.app/2021/06/15/vektorisierter-mittelwert-in-r/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/15/vektorisierter-mittelwert-in-r/</guid>
      <description>Setup library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() Einige Funktionen in R sind vektorisiert, andere nicht Einige Funktionen in R sind vektorisiert: sie führen ihren Dienst für jedes Element eines Vektors aus.</description>
    </item>
    
    <item>
      <title>ARM, Kap. 3 Syntax im Tidyverse-Stil</title>
      <link>https://data-se.netlify.app/2021/06/05/arm-kap-3-syntax-im-tidyverse-stil/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/05/arm-kap-3-syntax-im-tidyverse-stil/</guid>
      <description>1 Einführung 2 Pakete laden 3 Daten laden 4 Ein Prädiktor 4.1 lm1: Binärer Prädiktor 4.1.1 Diagramm 4.1.2 Unterschied im Mittelwert 4.2 lm2: Ein kontinuierlicher Prädiktor 5 Mehrere Prädiktoren 5.1 lm3: Ohne Interaktionseffekt 5.2 lm4: Mit Interaktionseffekt 6 Eingeschränkter Wertebereich 6.1 lm5: Regressionsmodell 7 Visualisierung von Ungewissheit im Model 7.1 Variation eines Prädiktors und anderen konstant gehalten 7.1.1 Variation von mom_iq 7.1.2 Kovariation mit mom_iq 8 Annahmen der Regressionsanalyse 8.</description>
    </item>
    
    <item>
      <title>Normalverteilung der Residuen, nicht Normalverteilung von Y</title>
      <link>https://data-se.netlify.app/2021/06/05/normalverteilung-der-residuen-nicht-normalverteilung-von-y/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/06/05/normalverteilung-der-residuen-nicht-normalverteilung-von-y/</guid>
      <description>1 Motivation 1.1 Setup 2 Datenbeispiel 2.1 Daten simulieren 2.2 Verteilung von Y 2.3 Verteilung der Residuen 2.4 Y vs. X 2.5 Residuen 1 Motivation Manchmal hört man, die Regression verlange, dass die Y-Variable normalverteilt sei. Das ist keine Annahme der Regression. Stattdessen sollten die Residuen normalverteilt sein.
Übrigens ist die Normalverteilung der Residuen laut Gelman und Hill 2007 keine wichtige Annahmen in vielen Situationen: Der Verlauf der Regressionsgeraden wird nämlich die die Normalität der Residuen nicht beeinflusst (vgl.</description>
    </item>
    
    <item>
      <title>Logarithmen und Exponenten in Regressionen: Wer braucht sowas?</title>
      <link>https://data-se.netlify.app/2021/05/31/logarithmen-und-exponenten-in-regressionen-wer-braucht-sowas/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/05/31/logarithmen-und-exponenten-in-regressionen-wer-braucht-sowas/</guid>
      <description>Die Folien des Vortrags (HTML-Version) liegen hier. Eine Internetverbindung ist nötig, um die Folien zu betrachten.
Die Rmd-Quelldatei liegt hier.
Lizenz: CC-BY</description>
    </item>
    
    <item>
      <title>YACSDA Seitensprünge</title>
      <link>https://data-se.netlify.app/2021/05/28/yacsda-seitenspr%C3%BCnge/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/05/28/yacsda-seitenspr%C3%BCnge/</guid>
      <description>1 Setup 2 Forschungsfrage und Hintergrund 3 ACHTUNG 4 Daten laden 5 Aufgaben 6 Los geht’s 6.1 Geben Sie zentrale deskriptive Statistiken an für Affärenhäufigkeit und Ehezufriedenheit! 6.2 Visualisieren Sie zentrale Variablen! 6.2.1 affairs 6.2.2 rating 6.3 Wer ist zufriedener mit der Partnerschaft: Personen mit Kindern oder ohne? 6.4 Wie viele fehlende Werte gibt es? Was machen wir am besten damit? 6.5 Wer ist glücklicher in der Partnerschaft: Männer oder Frauen?</description>
    </item>
    
    <item>
      <title>Modeling your research data: A crash course using R</title>
      <link>https://data-se.netlify.app/2021/03/24/modeling-your-research-data-a-crash-course-using-r/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/03/24/modeling-your-research-data-a-crash-course-using-r/</guid>
      <description>1 Course description 2 We’re on a crash course 3 More on modelling 4 Course prerequisites 5 Learning objectives 6 Course Literature 7 Course logistics 8 UPFRONT student preparation 9 Didactic outline 10 Schedule 10.1 Overview on topics covered 10.2 Block 1: Explorative Data Analysis 10.2.1 Visualization 10.2.2 Data Wrangling 10.2.3 Exercises / Case study 10.3 Block 2: Statistical Modelling: Basic 10.3.1 Theory 10.3.2 Case study 10.4 Block 3: Statistical Modelling: Multiple Regression and interaction 10.</description>
    </item>
    
    <item>
      <title>Fallstudie: Modellierung von Flugverspätungen</title>
      <link>https://data-se.netlify.app/2021/03/10/fallstudie-modellierung-von-flugversp%C3%A4tungen/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/03/10/fallstudie-modellierung-von-flugversp%C3%A4tungen/</guid>
      <description>1 Hintergrund und Forschungsfrage 2 Pakete laden 3 Daten laden 4 flights2: Nicht benötigte Variablen entfernen und ID hinzufügen 5 Aufteilung in Train- und Testsample 6 flights_train2, flights_test2 7 lm0: Nullmodell 8 lm1: origin 9 lm2: All in 10 flights_train3: Textvariablen in Faktorvariablen umwandeln 10.1 flights_test3 11 flights_train4: Faktorstufen zusammenfassen 11.1 flights_test4 12 lm3: Alle zusammengefassten Faktorvariablen 13 lm4: Alle metrischen Variablen 14 lm5: Alle metrischen und alle (zusammengefassten) nominalen Variablen 15 Wetter-Daten ergänzen 15.</description>
    </item>
    
    <item>
      <title>How to standardize variables in R</title>
      <link>https://data-se.netlify.app/2021/02/26/how-to-standardize-variables-in-r/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/26/how-to-standardize-variables-in-r/</guid>
      <description>1 Motivation 2 Load packages 3 Some data 4 Research question 5 Regression with unstandardized input variables 6 Standardize input variables 7 Regression with standardized input variables 8 The models (lm1 and lm2) are identical 9 Interpretation of a standardized regression coefficient 10 Reproducibility 1 Motivation Running a regression in R yields unstandardized coefficients, not standardized ones. However, as is spelled out by eg., Gelman and Hill (2007), standardizing values is of advantages in many situations.</description>
    </item>
    
    <item>
      <title>Case study: data vizualization on flight delays using tidyverse tools</title>
      <link>https://data-se.netlify.app/2021/02/24/case-study-data-vizualization-on-flight-delays-using-tidyverse-tools/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/24/case-study-data-vizualization-on-flight-delays-using-tidyverse-tools/</guid>
      <description>1 Load packages 2 Load data 3 Exercises/questions 4 Solutions 4.1 Plot the distribution of the delays. Describe your insights. 4.2 Plot the distribution of the delays per origin airport. 4.3 Visualize the assocation of delay and time of the day. Find a way to reduce overplotting. 4.4 Visualize the assocation of delay and distance to destination. Separate by origin and month. 4.5 Visualize the assocation of delay and time of the day.</description>
    </item>
    
    <item>
      <title>Exercises (no solutions): data vizualization on flight delays using tidyverse tools</title>
      <link>https://data-se.netlify.app/2021/02/24/exercises-no-solutions-data-vizualization-on-flight-delays-using-tidyverse-tools/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/24/exercises-no-solutions-data-vizualization-on-flight-delays-using-tidyverse-tools/</guid>
      <description>1 Load packages 2 Get the data 2.1 Alternative way to get the data 2.2 Code book 3 Exercises 4 Solutions 5 Reproducibility 1 Load packages library(tidyverse) # data wrangling 2 Get the data We’ll be analyzing the data set flights, describing the flights which started from NYC in 2013.
Here’s how to get the data set:
library(tidyverse) library(nycflights13) data(&amp;quot;flights&amp;quot;) 2.1 Alternative way to get the data Alternatively, import the data from a csv file:</description>
    </item>
    
    <item>
      <title>Exercises to data wrangling with the tidyverse</title>
      <link>https://data-se.netlify.app/2021/02/24/exercises-to-data-wrangling-with-the-tidyverse/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/24/exercises-to-data-wrangling-with-the-tidyverse/</guid>
      <description>1 Exercise collection: Life exptectancy 2 Disclosure 3 Research questions 4 First steps 5 Getting help 6 Exercises 6.1 Data Wrangling 6.2 Data Visualization 7 Solutions 8 Reproducibility library(tidyverse) 1 Exercise collection: Life exptectancy Get the data from this source.
gapminder_raw &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder-FiveYearData.csv&amp;quot;) 2 Disclosure This exercises are based on a tutorial by Rebekka Barter. Great work!
3 Research questions How did life expectancy change in the course of the last decades?</description>
    </item>
    
    <item>
      <title>Modelling movie successes: linear regression</title>
      <link>https://data-se.netlify.app/2021/02/24/modelling-movie-successes-linear-regression/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/24/modelling-movie-successes-linear-regression/</guid>
      <description>1 Load packages 2 Load data 3 Research question 4 Disclaimer 5 Get overview 5.1 Descriptive statistics 5.2 Missing values 5.3 Distribution of the output variable 5.4 Distribution of the predictors 5.5 Transform budget (via logarithm) 5.6 ggscatterstats 5.7 Pivot data set 5.8 Drop unused variables 5.9 Drop cases with missing values 6 Model 0 7 Model 1: budget_log10 8 Model 2: Adding number of votes 9 Model 3: Number of votes, quadratic 10 Model 4: Number of votes, 3rd degree 11 Model 5: Multiple regression 12 Model 6: Interaction 13 Model selection: ANOVA 14 Regression diagnostics: testing the assumptions 15 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(broom) # nice formatting of output library(skimr) # gives overview on descriptives library(ggfortify) # plotting regression diagnostics library(ggstatsplot) # fancy scatter plot 2 Load data Load this package to access the data set:</description>
    </item>
    
    <item>
      <title>Scraping Cochrane Reviews, some trials</title>
      <link>https://data-se.netlify.app/2021/02/19/scraping-cochrane-reviews/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/19/scraping-cochrane-reviews/</guid>
      <description>1 Load packages 2 Parse one review 3 Parse the title 4 Parse the abstract 5 Segment the abstract 5.1 Background 5.2 Objectives 5.3 And so forth 6 Summary of Findings table 6.1 Parse node of class ‘summaryOfFindings’ 6.2 Table by ID 6.3 Looking for tables 7 Extract (Primary) Outcomes with the GRADE 7.1 Get column with outcomes 7.2 Delete non-data rows 8 Delete footer 8.1 Get columns with GRADE information 8.</description>
    </item>
    
    <item>
      <title>Explorative Datenanalyse zum Datensatz &#34;OECD Wellbeing&#34;</title>
      <link>https://data-se.netlify.app/2021/02/11/explorative-datenanalyse-zum-datensatz-oecd-wellbeing/</link>
      <pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/11/explorative-datenanalyse-zum-datensatz-oecd-wellbeing/</guid>
      <description>1 Load packages 2 Benötigte Pakete 3 Datensatz laden 4 Erster Blick 5 Metrische Variablen einzeln (univariat) 5.1 Histogramm nach Gruppen 5.2 VERTIEFUNG: Histogramm für alle Variablen 6 Forschungsfrage 7 Datensatz filtern - nur Länder, keine Landesteile 8 Vergleich der Lebenszufriedenheit der Länder 8.1 Umwandling in eine Faktor-Variable 8.2 Ranking und Top-10-Prozent der Zufriedenheit 8.3 Vertiefung 8.4 Vertiefung 8.5 Vertiefung 9 Zusammenhang zweier metrischer Variablen – Punktediagramm 9.0.1 Und so weiter 9.</description>
    </item>
    
    <item>
      <title>YACSDA: Topgear</title>
      <link>https://data-se.netlify.app/2021/02/11/yacda-topgear/</link>
      <pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/02/11/yacda-topgear/</guid>
      <description>1 Load packages 1.1 Numerischer Überblick 1.2 Wie verteilen sich die Preise? 1.3 Wie ist der Zusammenhang von Preis und Beurteilung des Autos? 2 Wie verteilt sich das Gewicht der Autos? 3 Hängt Gewicht mit Preis zusammen? 4 Wie verteilt sich die Geschwindigkeit der Autos? 5 Hängt Preis mit Geschwindigkeit zusammen? 5.1 Wie hängt Geschwindigkeit mit Beurteilung zusammen? 5.2 Welche Hersteller hat die meisten Autotypen? 5.3 Die 10% größten Hersteller 5.</description>
    </item>
    
    <item>
      <title>Grading a prediction contest</title>
      <link>https://data-se.netlify.app/2021/01/20/grading-a-prediction-contest/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/01/20/grading-a-prediction-contest/</guid>
      <description>1 Motivation 2 Setup 3 Helper functions 3.1 Function to parse data 3.2 Function to compute \(R^2\) 3.3 Function to compute \(MSE\) 3.4 Function to compute generalized error function 4 Import solution (true) data (ie., solution) 5 Parse the data 6 Build master data frame 6.1 List df where each submission is one row 6.2 Change character to numeric 6.3 Add observed (true) values 6.4 Check lengths of submissions 7 Compute accuracy (\(R^2\) etc.</description>
    </item>
    
    <item>
      <title>Vorhersagen mit lm</title>
      <link>https://data-se.netlify.app/2020/12/15/vorhersagen-mit-lm/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/15/vorhersagen-mit-lm/</guid>
      <description>1 Pakete laden 2 Daten laden 3 Forschungsfrage 3.1 Daten aufbereiten 3.2 Modell schätzen 4 Vorhersage mit predict() – ohne Schätzbereich 5 Vorhersage mit predict() – mit Schätzbereich 6 Reproducibility 1 Pakete laden library(tidyverse) # data wrangling library(moderndive) 2 Daten laden data(movies, package = &amp;quot;ggplot2movies&amp;quot;) 3 Forschungsfrage Wie beliebt ist erwartungsgemäß ein Actionfilm nach dem Jahr 2000, der zu den Top-10-Prozent der Budgetverteilung gehört?
3.1 Daten aufbereiten movies &amp;lt;- movies %&amp;gt;% mutate(year_after_2000 = case_when( year &amp;gt;= 2000 ~ &amp;quot;yes&amp;quot;, TRUE ~ &amp;quot;no&amp;quot; )) %&amp;gt;% mutate(is_top10percent_budget = case_when( percent_rank(budget) &amp;gt; 0.</description>
    </item>
    
    <item>
      <title>titanic-tidymodels: boost</title>
      <link>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-boost/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-boost/</guid>
      <description>1 Objective 2 Detect available cores 3 Load and prepare data 3.1 Hide details in a function 4 Split data into train and test 5 Define recipe 6 Define model 7 Define cross validation scheme 8 Define workflow 9 Define analysis and validation (oob) set 10 Fit the grid 11 View results 12 Get best model 13 Final fit (on train data) 13.1 Fit final workflow (on test data) 14 Predict test data 15 Save predictions to disk 16 Reproducibility library(tidyverse) # data wrangling library(tidymodels) # modelling library(broom) # tidy model output library(skimr) # overview on descriptives library(parallel) # multiple cores -- unix only 1 Objective Predicting the survival in the Titanic disaster.</description>
    </item>
    
    <item>
      <title>titanic-tidymodels: boost simple</title>
      <link>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-boost-simple/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-boost-simple/</guid>
      <description>1 Load packages 2 Objective 3 Load and prepare data 3.1 Hide details in a function 4 Split data into train and test 5 Define recipe 6 Define model 7 Define workflow 8 Fit the model 9 Predict the test data 10 Save csv file to disk 11 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(tidymodels) # modelling 2 Objective Predicting the survival in the Titanic disaster. We’ll be using a tidymodels approach.</description>
    </item>
    
    <item>
      <title>titanic-tidymodels: glm1</title>
      <link>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-glm1/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-glm1/</guid>
      <description>1 Load packages 2 Objective 3 Load and prepare data 3.1 Hide details in a function 4 Split data into train and test 5 Define recipe 6 Define model 7 Define workflow 8 Fit the model 9 Predict the test data 10 Save csv file to disk 11 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(tidymodels) # modelling library(broom) # tidy model output library(skimr) # overview on descriptives library(testthat) # unit testing 2 Objective Predicting the survival in the Titanic disaster.</description>
    </item>
    
    <item>
      <title>titanic-tidymodels: rf1</title>
      <link>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-rf1/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/14/titanic-tidymodels-rf1/</guid>
      <description>1 Load packages 2 Objective 3 Load and prepare data 3.1 Hide details in a function 4 Split data into train and test 5 Define recipe 6 Define model 7 Define workflow 8 Fit the model 9 Predict the test data 10 Save csv file to disk 11 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(tidymodels) # modelling 2 Objective Predicting the survival in the Titanic disaster. We’ll be using a tidymodels approach.</description>
    </item>
    
    <item>
      <title>titanic-tidymodels: rf2</title>
      <link>https://data-se.netlify.app/2020/12/14/titanic-itdymodels-rf2/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/14/titanic-itdymodels-rf2/</guid>
      <description>1 Load packages 2 Objective 3 Setup 4 Load and prepare data 4.1 Hide details in a function 5 Split data into train and test 6 Define recipe 7 Define model 8 Define cross validation scheme 9 Define workflow 10 Fit the grid 11 View results 12 Get best model 13 Final fit (on train data) 13.1 Fit final workflow (on test data) 14 Predict test data 15 Save predictions to disk 16 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(tidymodels) # modelling library(broom) # tidy model output library(skimr) # overview on descriptives library(parallel) # multiple cores -- unix only 2 Objective Predicting the survival in the Titanic disaster.</description>
    </item>
    
    <item>
      <title>titanic-tidymodels: tree</title>
      <link>https://data-se.netlify.app/2020/12/14/titani-tidymodels-tree/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/14/titani-tidymodels-tree/</guid>
      <description>1 Load packages 2 Objective 3 Load and prepare data 3.1 Hide details in a function 4 Split data into train and test 5 Define recipe 6 Define model 7 Define workflow 8 Fit the model 9 Predict the test data 10 Save csv file to disk 11 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(tidymodels) # modelling 2 Objective Predicting the survival in the Titanic disaster. We’ll be using a tidymodels approach.</description>
    </item>
    
    <item>
      <title>Beispiel für eine Vorwärts-schrittweise-Regression</title>
      <link>https://data-se.netlify.app/2020/12/10/beispiel-f%C3%BCr-eine-vorw%C3%A4rts-schrittweise-regression/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/10/beispiel-f%C3%BCr-eine-vorw%C3%A4rts-schrittweise-regression/</guid>
      <description>1 Hintergrund 2 Achtung 3 Pakete 4 Daten laden 5 Fehlende Werte 6 Modell 0 7 Modelle mit einer Variablen (lm1) 7.1 lm1a 7.2 lm1b 7.3 lm1c 7.4 Moment mal… 8 Automatisiertes Vorwärts-Regression 9 Modellgüten der Modelle mit einem Prädiktor 10 Reproduzierbarkeit 1 Hintergrund Diese Übung bezieht sich auf ISRS, Kap. 6.2.
2 Achtung Gelman hasst schrittweise Regression …
3 Pakete library(tidyverse) # data wrangling library(broom) # tidy Regressionsoutput library(skimr) # EDA library(moderndive) # Komfort library(olsrr) # Schrittweise Regression 4 Daten laden Auf dieser Seite sind die Daten zu finden.</description>
    </item>
    
    <item>
      <title>Modellannahmen grafisch überprüfen</title>
      <link>https://data-se.netlify.app/2020/12/10/modellannahmen-grafisch-%C3%BCberpr%C3%BCfen/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/10/modellannahmen-grafisch-%C3%BCberpr%C3%BCfen/</guid>
      <description>1 Hintergrund 2 Pakete 3 Daten laden 4 Fehlende Werte 5 Modell 1 6 Überprüfen der Annahmen 6.1 Linearität 6.2 Varianzgleichheit der Residuen 6.3 Normalverteilung der Residuen 7 Reproducibility 1 Hintergrund Diese Übung bezieht sich auf ISRS, Kap. 6.3.
2 Pakete library(tidyverse) # data wrangling #library(broom) # tidy Regressionsoutput library(skimr) # EDA library(moderndive) # Komfort 3 Daten laden Auf dieser Seite sind die Daten zu finden.
d &amp;lt;- read_csv(&amp;quot;https://www.openintro.org/data/csv/mariokart.csv&amp;quot;) (“d” wie Daten.</description>
    </item>
    
    <item>
      <title>ModernDive, Chapter 05 - Exercises/Aufgaben (in Deutsch)</title>
      <link>https://data-se.netlify.app/2020/12/02/moderndive-chapter-05-exercises-aufgaben-in-deutsch/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/12/02/moderndive-chapter-05-exercises-aufgaben-in-deutsch/</guid>
      <description>0.1 Überblick 1 Stärkster univariater Prädiktor der Dozentenbeurteilung 1.1 Aufgabe 1.2 Hilfe 1.3 Hinweise 1.4 Lösung 1.5 Für Fortgeschrittene 2 \(R^2\) für univariate Regression von score auf den stärksten Prädiktor 2.1 Aufgabe 2.2 Lösung 3 Visualisieren Sie die univariate Regression 3.1 Aufgabe 3.2 Lösung 3.3 Variante 4 Vergleich zur Korrelation 4.1 Aufgabe 4.2 Lösung 5 Standardisierte Prädiktoren 5.1 Aufgabe 5.2 Lösung 6 Lebenserwartung nach Kontinent berechnen 6.1 Aufgabe 6.2 Lösung 6.</description>
    </item>
    
    <item>
      <title>derivation-of-the-logistic-regression</title>
      <link>https://data-se.netlify.app/2020/11/28/derivation-of-the-logistic-regression/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/11/28/derivation-of-the-logistic-regression/</guid>
      <description>The logistic regression is an incredible useful tool, partly because binary outcomes are so frequent in live (“she loves me - she doesn’t love me”). In parts because we can make use of well-known “normal” regression instruments.
But the formula of logistic regression appears opaque to many (beginners or those with not so much math background).
Let’s try to shed some light on the formula by discussing some accessible explanation on how to derive the formula.</description>
    </item>
    
    <item>
      <title>Simple derivation of linear regression coefficients</title>
      <link>https://data-se.netlify.app/2020/11/18/simple-derivation-of-linear-regression-coefficients2/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/11/18/simple-derivation-of-linear-regression-coefficients2/</guid>
      <description>Load packages library(tidyverse) Motivation The (simple) linear regression is a standard tool in data analysis and statistics. Its properties are well-known but sometimes not known in details to the applied analyst; which is ok. However, if one wishes to understand deeper the internals of the system, the question may arise how to derive the coefficients of the linear regression. Here’s one way.
This approach focuses on simple calculus and derivatives; no matrix algebra, and only the simple case for one predictor.</description>
    </item>
    
    <item>
      <title>The mean minimizes the sum of squares</title>
      <link>https://data-se.netlify.app/2020/11/18/the-mean-minimizes-the-sum-of-squares/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/11/18/the-mean-minimizes-the-sum-of-squares/</guid>
      <description>Load packages library(tidyverse) Properties of the arithmetic mean The stuff presented here is far from new, that’s all well-known and basic. See here for a source.
The arithmetic mean has a number of properties …
Residuals cancel out … such as that the residuals cancel out, i.e, the sum of the deviations from the mean (the residuals) sum up to zero:
\[\sum (x_i - \bar{x}) = \sum x_i - \sum \bar{x} = n \cdot \bar{x} - n \cdot \bar{x} = 0\]</description>
    </item>
    
    <item>
      <title>Fallstudie zur Regressionsanalyse -- ggplot2movies</title>
      <link>https://data-se.netlify.app/2020/11/13/fallstudie-zur-regressionsanalyse-ggplot2movies/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/11/13/fallstudie-zur-regressionsanalyse-ggplot2movies/</guid>
      <description>1 Pakete laden 2 Daten laden 3 Forschungsfrage 4 Ihre salvatorische Klausel 5 Überblick über die Kennzahlen 6 Fehlende Werte 7 Verteilung der Output-Variablen 8 Verteilung der Input-Variablen 9 Explorative Analyse 10 Budget logarithmieren 11 Datensatz umbauen (pivotieren): Moderierender Effekt von Genre 12 Korrelation zwischen den Gruppen 13 Einfluss von Genre 14 Datensatz vereinfachen 15 Datensatz aufteilen (Train- und Test) 16 Modell 0 (“Nullmodell”) 17 Modell 1: budget_log10 18 Unendliche Werte entfernen 19 Model 1 Ergebnisse 20 Anzahl der Stimmen (votes) 21 Modell 2: Anzahl der Stimmen, linear 22 Modell 3: Anzahl der Stimmen als Polynomialmodell, quadratisch 23 Modell 4: Anzahl der Stimmen als Polynomialmodell, 3.</description>
    </item>
    
    <item>
      <title>Fallstudie zur Datenvisualisierung -- Datensatz &#34;flights&#34;</title>
      <link>https://data-se.netlify.app/2020/11/12/fallstudie-zur-datenvisualisierung-datensatz-flights/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/11/12/fallstudie-zur-datenvisualisierung-datensatz-flights/</guid>
      <description>1 Vorbereitung 2 Aufgaben zur Datenvisualisierung 3 Hinweise 4 Lösungen 4.1 1. Visualisieren Sie die Verteilung der Verspätungen der Flüge. 4.2 2. Visualisieren Sie die Verteilung der Verspätung der Flüge pro Abflugsort. 4.3 3. Visualisieren Sie den Zusammenhang von Verspätung und Tageszeit. Reduzieren Sie dabei Overplotting. 4.4 4. Visualisieren Sie den Zusammenhang von Verspätung und Flugstrecke (distance) – aufgeteilt nach Abflugsort und nach Monat! 4.5 5. Visualisieren Sie den Zusammenhang von Verspätung und Tageszeit – für die drei Airlines mit der höchsten Durchschnittsverspätung.</description>
    </item>
    
    <item>
      <title>A simple solution to ditch the question &#34;what&#39;s the path of my data?&#34; when importing data to R</title>
      <link>https://data-se.netlify.app/2020/10/19/what-s-my-path/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/10/19/what-s-my-path/</guid>
      <description>Load packages library(tidyverse) Motivation Importing data to R can cause headaches for newbies. For some, the concept of relative and absolute paths is new. That’s why I compiled here some recommendations on how to important data into R and on how to ditch the “what’s my path” problem.
Approach 1: Start an RStudio project That’s an approach I generally recommend.
Start an RStudio project. Put your code files and your data files in this very folder that you just defined as your RStudio project folder.</description>
    </item>
    
    <item>
      <title>How to import data without whats-the-path-pain</title>
      <link>https://data-se.netlify.app/2020/10/19/how-to-import-data-without-whats-the-path-pain/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/10/19/how-to-import-data-without-whats-the-path-pain/</guid>
      <description> Load packages library(tidyverse) </description>
    </item>
    
    <item>
      <title>Simulationsbasierte Inferenz – Kurzfassung</title>
      <link>https://data-se.netlify.app/2020/06/26/simulationsbasierte-inferenz-kurzfassung/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/06/26/simulationsbasierte-inferenz-kurzfassung/</guid>
      <description>Simulationsbasierte Inferenz Simulationsbasierte Inferenz (SBI) ist eine Variante der Inferenzstatistik, in der Schätzwerte einer Population nicht anhand theoretischer Verteilungen (wie der Normalverteilung) hergeleitet werden, sondern durch Nachstellen eines Versuchs mithilfe des Computers. Damit wird der Zugang zur Inferenzstastistik vereinfacht und es werden Parameterberechnung möglich (bzw. genauer), die vorher (ohne Computersimulationen) nicht möglich waren.
Folien Hier finden sich meine Folien zur Kurzfassung der SBI (als HTML-Version). Die HTLM-Folien können nur online betrachtet werden.</description>
    </item>
    
    <item>
      <title>How to find the package of a R function</title>
      <link>https://data-se.netlify.app/2020/05/15/how-to-find-the-package-of-a-r-function/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2020/05/15/how-to-find-the-package-of-a-r-function/</guid>
      <description>Load packages library(tidyverse) Where does my function reside? Finding the package of a given R function is some hassle. I am not aware of a quick built-in way in R to find the package of a function.
That’s why I came up with my own function, check it out:
Install package Speaking of packages of function, that’s the package where this function stays:
library(devtools) install_github(&amp;quot;sebastiansauer/prada&amp;quot;) Example library(prada) find_funs(&amp;quot;select&amp;quot;) #&amp;gt; # A tibble: 11 x 3 #&amp;gt; package_name builtin_pckage loaded #&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; #&amp;gt; 1 BDgraph FALSE FALSE #&amp;gt; 2 dplyr FALSE TRUE #&amp;gt; 3 jmvcore FALSE FALSE #&amp;gt; 4 jqr FALSE FALSE #&amp;gt; 5 MASS TRUE FALSE #&amp;gt; 6 plotly FALSE FALSE #&amp;gt; 7 raster FALSE FALSE #&amp;gt; 8 rstatix FALSE FALSE #&amp;gt; 9 tidygraph FALSE FALSE #&amp;gt; 10 tidylog FALSE FALSE #&amp;gt; 11 VGAM FALSE FALSE find_funs(&amp;quot;tidy&amp;quot;) #&amp;gt; # A tibble: 14 x 3 #&amp;gt; package_name builtin_pckage loaded #&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; #&amp;gt; 1 broom FALSE FALSE #&amp;gt; 2 broom.</description>
    </item>
    
    <item>
      <title>Simple proof that the correlation coefficient cannot exceed abs(1)</title>
      <link>https://data-se.netlify.app/2019/10/07/simple-proof-that-the-correlation-coefficient-cannot-exceed-abs-1/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2019/10/07/simple-proof-that-the-correlation-coefficient-cannot-exceed-abs-1/</guid>
      <description>Load packages library(tidyverse) library(MASS) Motivation It is well-known that the notorious (Pearson’s) correlation cannot exceed an absolute value greater than 1, that is
\[ -1 \le r \le +1 \]
or
\[ |r| \le 1 \]
However, proofing this fact is less straightforward. A classical way of proofing the above inequality is by using the Cauchy-Schwarz inequality. From a teacher’s perspective, the CS inequality may not be ideal, because the students may lack some knowledge necessary for appreciating this proof.</description>
    </item>
    
    <item>
      <title>Reducing residual variance in modeling</title>
      <link>https://data-se.netlify.app/2019/03/26/reducing-residual-variance-in-modeling/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2019/03/26/reducing-residual-variance-in-modeling/</guid>
      <description>Modeling is a central part not only of statistical inquiry, but also of everyday human sense-making. We use models as metaphors for the world, in a broader sense. Of course, a model that explains the world better (than some other model) is to be preferred, all other things being equal. In this post, we demonstrate that a more “clever” statistical model reduces the residual variance. It should be noted that this “noise reduction” comes at a cost, however: The model gets more complex; there a more parameters in the model.</description>
    </item>
    
    <item>
      <title>Beispiel für eine logistische Regression</title>
      <link>https://data-se.netlify.app/2019/03/20/beispiel-f%C3%BCr-eine-logistische-regression/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2019/03/20/beispiel-f%C3%BCr-eine-logistische-regression/</guid>
      <description>Wozu ist das gut? Kurz gesagt ist die logistische Regression ein Werkzeug, um dichotome (zweiwertige) Ereignisse vorherzusagen (auf Basis eines Datensatzes mit einigen Prädiktoren).
Was sagt uns die logistische Regression? Möchte man z.B. vorhersagen, ob eine E-Mail Spam ist oder nicht, so ist es nützlich, für jede zu prüfende Mail eine Wahrscheinlichkeit zu bekommen. So könnte uns die logistische Regression sagen: “Eine Mail mit diesen Ausprägungen in den Prädiktoren hat eine Wahrschenlichkeit von X Prozent, dass es sich um Spam handelt”.</description>
    </item>
    
    <item>
      <title>A short tutorial for the logistic regression</title>
      <link>https://data-se.netlify.app/2019/01/07/a-short-tutorial-for-the-logistic-regression/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2019/01/07/a-short-tutorial-for-the-logistic-regression/</guid>
      <description>Here’s q quick walk-through for a logistic regression in R.
Setup library(tidyverse) library(reshape2) # dataset &amp;quot;tips&amp;quot; library(caret) library(mosaic) We’ll use the tips dataset:
data(tips) Research question Assume we would like to predict if a person is female based on some predictor such as the amount of tip she/he give.
How many instances of each type of the outcome variable are in the data set?
tally(~ sex, data = tips, format = &amp;quot;proportion&amp;quot;) #&amp;gt; sex #&amp;gt; Female Male #&amp;gt; 0.</description>
    </item>
    
    <item>
      <title>Folien für Vortrag &#39;Papers publizieren&#39;</title>
      <link>https://data-se.netlify.app/2019/01/04/folien-f%C3%BCr-vortrag-papiers-publizieren/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2019/01/04/folien-f%C3%BCr-vortrag-papiers-publizieren/</guid>
      <description>Die Folien für meinen Vortrag “Papers publizieren” zum Dozententreffen 2019 der FOM Hochschule liegen hier.</description>
    </item>
    
    <item>
      <title>Why standard regression is not (so) adequate for regressing proportions</title>
      <link>https://data-se.netlify.app/2019/01/03/why-standard-regression-is-not-so-adequate-for-regressing-proportions/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2019/01/03/why-standard-regression-is-not-so-adequate-for-regressing-proportions/</guid>
      <description>Intro Professor Sweet is conducting some research to investigate the risk factor and drivers of student exam success. In a recent analysis he considers the variable “exam successfully passed” (vs. not passed) as the criterion (output) and the amount of time spent for preparation (aka study time) as predictor.
Setup Please make sure that all packages are installed before proceeding. Except pradadata, all packages are on CRAN. [ Here’s] (https://github.</description>
    </item>
    
    <item>
      <title>Easy way to convert factors zu numbers</title>
      <link>https://data-se.netlify.app/2018/06/22/easy-way-to-convert-factors-zu-numbers/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/06/22/easy-way-to-convert-factors-zu-numbers/</guid>
      <description>Converting factors to numbers in R can be frustrating. Consider the following sitation: We have some data, and try to convert a factor (sex in tips, see below) to a numeric variable:
library(tidyverse) library(sjmisc) # for recoding data(tips, package = &amp;quot;reshape2&amp;quot;) glimpse(tips) #&amp;gt; Observations: 244 #&amp;gt; Variables: 7 #&amp;gt; $ total_bill &amp;lt;dbl&amp;gt; 16.99, 10.34, 21.01, 23.68, 24.59, 25.29, 8.77, 26.... #&amp;gt; $ tip &amp;lt;dbl&amp;gt; 1.01, 1.66, 3.50, 3.31, 3.61, 4.</description>
    </item>
    
    <item>
      <title>Convenient way to cite blog posts using Bibtex</title>
      <link>https://data-se.netlify.app/2018/04/11/convenient-way-to-cite-blog-posts-using-bibtex/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/04/11/convenient-way-to-cite-blog-posts-using-bibtex/</guid>
      <description>Writing (scholarly) texts - a great way is using Markdown. Bibtext interacts nicely with Markdown, so one can easily cite literature.
One question that came up for me a couple of times recently was how to cite blogs in Bibtex?
I found this solution to be the most convenient:
@misc{stats_test, Author = {Sebastian Sauer}, Date-Added = {2018-03-29 13:54:38 +0000}, Date-Modified = {2018-03-29 13:55:51 +0000}, Doi = {10.17605/OSF.IO/SJHUY}, Howpublished = {Data Set}, Month = {01}, Title = {Results from an exam in inferential statistics}, Year = {2017}} The important points are the @misc class, and the Howpublished field.</description>
    </item>
    
    <item>
      <title>One-way ANOVA power analysis</title>
      <link>https://data-se.netlify.app/2018/04/11/one-way-anova-power-analysis/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/04/11/one-way-anova-power-analysis/</guid>
      <description>Computing or estimating power is a very useful procedure in order to weigh the reliability of study results.
One frequent procedure in inferential statistics is the ANOVA, with the simplest form being the one-way ANOVA. This post shows how to compute power for this test.
What’s the effect size? The first thing to not is that there is no such thing as “power” - in the sense that a sample or a test would have “its power”.</description>
    </item>
    
    <item>
      <title>Why &#34;n-1&#34; in empirical variance? A simulation.</title>
      <link>https://data-se.netlify.app/2018/03/24/why-n-1-in-empirical-variance-a-simulation/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/03/24/why-n-1-in-empirical-variance-a-simulation/</guid>
      <description>It is well-known that the empirical variance underestimates the population variance. Specifically, the empirical variance is defined as: \(var_{emp} = \frac{\sum_i (x_i - \bar{x})^2}{n-1}\). But why \(n-1\), why not just \(n\), as intuition (of some) dictates? Put shortly, as the variance of a sample tends to underestimate the population variance we have to inflate it artificially, to enlarge it, that’s why we do put a smaller number (the “n-1”) in the denominator, resulting in a larger value of the whole fraction.</description>
    </item>
    
    <item>
      <title>Beispiel zu Simpsons Paradox</title>
      <link>https://data-se.netlify.app/2018/03/16/beispiel-zu-simpsons-paradox/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/03/16/beispiel-zu-simpsons-paradox/</guid>
      <description>knitr::opts_chunk$set(echo = FALSE) In diesem Post diskutieren wir ein Beispiel zu Simpson’s Paradox. Der Fokus liegt nicht auf der R-Syntax, sondern auf einer intuitiven Erläuterung des Simpson Paradox. (Die Syntax findet sich in ähnlicher Form in diesem Post.)
Sagen wir, Sie müssen sich zwischen zwei Ärzten (Dr. Arriba und Dr. Bajo) entscheiden und fragen sich, welcher “besser” ist. Unter “besser” verstehen Sie “höhere Heilungsquote”.
Die beiden Ärzte behandeln die gleichen zwei Krankheiten: Severitis und Nervosia maskulina.</description>
    </item>
    
    <item>
      <title>Tangible data of normal distributed data</title>
      <link>https://data-se.netlify.app/2018/03/16/tangible-data-of-normal-distributed-data/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/03/16/tangible-data-of-normal-distributed-data/</guid>
      <description>A classical example for a normally distributed variable is height. However, I kept on looking for data as to the mean and sd for some populations, such as Germany. Now I found some reliably looking data here.
We will not question whether the assumption of normality holds, we just assume it.
In the source, we can read that in Germany, the adult men population has the following parameters:
mean: 174cm</description>
    </item>
    
    <item>
      <title>Map students to presentation slots</title>
      <link>https://data-se.netlify.app/2018/03/11/map-students-to-presentation-slots/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/03/11/map-students-to-presentation-slots/</guid>
      <description>As a teacher, I not only teach but also assess the achievements of students. One example of a typical student assignments is a presentation. You know, powerpoint slides and stuff.
For that purpose, I often need to map students to one of several time slots. Here’s the R code I use for that purpose.
library(tidyverse) ## ── Attaching packages ────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ── ## ✔ ggplot2 3.0.0 ✔ purrr 0.</description>
    </item>
    
    <item>
      <title>Intuition to Simpson&#39;s paradox</title>
      <link>https://data-se.netlify.app/2018/03/09/intuition-to-simpson-s-paradox/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/03/09/intuition-to-simpson-s-paradox/</guid>
      <description>Say, you have to choose between two doctors (Anna and Berta). To decide which one is better, you check their success rates. Suppose that they deal with two conditions (Coolities and Dummities). So let’s compare their success rate for each of the two conditions (and the total success rate):
This is the proportion of healing (success) of the first doctor, Dr. Anna for each of the two conditions:
Coolities: 7 out of 8 patients are healed from Coolities Dummieties: 1 out of 2 patients are healed from Dummities This is the proportion of healing (success) of the first doctor, Dr.</description>
    </item>
    
    <item>
      <title>How to create columns in a dataframe in R</title>
      <link>https://data-se.netlify.app/2018/03/07/how-to-create-columns-in-a-dataframe-in-r/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2018/03/07/how-to-create-columns-in-a-dataframe-in-r/</guid>
      <description>Note that we will use this library for this post:
library(dplyr) ## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.5.1 ## ## Attaching package: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union By the way, loading mosaic, will load dplyr too.
One of the major data wrangling activities (in R and elsewhere) is to create a new column in a data frame.</description>
    </item>
    
    <item>
      <title> Wie gut schätzt eine Stichprobe die Grundgesamtheit?</title>
      <link>https://data-se.netlify.app/2017/11/17/inference/</link>
      <pubDate>Fri, 17 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/11/17/inference/</guid>
      <description>Daten Sie arbeiten bei der Flughafenaufsicht von NYC. Cooler Job.
library(nycflights13) data(flights) Pakete laden library(mosaic) Stichprobe ziehen Die Aufsichtsbehörde zieht eine Probe von 100 Flügen und ermittelt die &amp;ldquo;typische&amp;rdquo; Verspätung.
set.seed(42) sample(flights$arr_delay, size = 100) -&amp;gt; flights_sample Und berechnen wir die typischen Kennwerte:
favstats(~flights_sample, na.rm = TRUE) #&amp;gt; min Q1 median Q3 max mean sd n missing #&amp;gt; -51 -18.75 -5 11.75 150 0.4387755 31.1604 98 2 Ob $n=3$ ausreichen würde?</description>
    </item>
    
    <item>
      <title>Crashkurs Datenanalyse mit R</title>
      <link>https://data-se.netlify.app/2017/09/12/r-crashkurs/</link>
      <pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/09/12/r-crashkurs/</guid>
      <description>Willkommen zum R-Crashkurs Nicht jeder liebt Datenanalyse und Statistik&amp;hellip; in gleichem Maße! Das ist zumindest meine Erfahrung aus dem Unterricht 🔥. Crashkurse zu R sind vergleichbar zu Tanzkursen vor der Hochzeit: Hat schon vielen das Leben gerettet, aber ersetzt nicht ein Semester in der Pariser Tanzakademie (man beachte den Vergleich zum Unterricht an der Hochschule).
Dieser Crashkurs ist für Studierende oder Anfänger der Datenanalyse gedacht, die in kurzer Zeit einen verzweifelten Versuch &amp;hellip; äh &amp;hellip; einen grundständigen Überblick über die Datenanalyse erwerben wollen.</description>
    </item>
    
    <item>
      <title>A predictor&#39;s unique contribution - (visual) demonstration</title>
      <link>https://data-se.netlify.app/2017/05/17/storks/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/05/17/storks/</guid>
      <description>A well-known property of regression models is that they capture the unique contribution of a predictor. By &amp;ldquo;unique&amp;rdquo; we mean the effect of the predictor (on the criterion) if the other predictor(s) is/are held constant. A typical classroom example goes along the following lines.
All about storks There&amp;rsquo;s a correlation between babies and storks. Counties with lots of storks enjoy large number of babies and v.v.
However, I have children, I know the storks are not overly involved in that business, so says the teacher (polite laughters in the audience).</description>
    </item>
    
    <item>
      <title>Crashkurs Datenanalyse mit R</title>
      <link>https://data-se.netlify.app/2017/05/16/crashkurs/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/05/16/crashkurs/</guid>
      <description>Nicht jeder liebt Datenanalyse und Statistik&amp;hellip; in gleichem Maße. Das ist zumindest meine Erfahrung aus dem Unterricht :neckbeard: 🔥. Crashkurse zu R sind vergleichbar zu Crahskursen zu Französisch - kann man machen, aber es sollte die Maxime gelten &amp;ldquo;If everything else fails&amp;rdquo;.
Dieser Crashkurs ist für Studierende oder Anfänger der Datenanalyse gedacht, die in kurzer Zeit einen verzweifelten Versuch &amp;hellip; äh &amp;hellip; einen grundständigen Überblick über die Datenanalyse erwerben wollen.</description>
    </item>
    
    <item>
      <title>Checklist for Data Cleansing</title>
      <link>https://data-se.netlify.app/2017/02/13/data_cleansing/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/02/13/data_cleansing/</guid>
      <description>What this post is about: Data cleansing in practice with R Data analysis, in practice, consists typically of some different steps which can be subsumed as &amp;ldquo;preparing data&amp;rdquo; and &amp;ldquo;model data&amp;rdquo; (not considering communication here):
(Inspired by this)
Often, the first major part &amp;ndash; &amp;ldquo;prepare&amp;rdquo; &amp;ndash; is the most time consuming. This can be lamented since many analysts prefer the cool modeling aspects (since I want to show my math!). In practice, one rather has to get his (her) hands dirt&amp;hellip;</description>
    </item>
    
    <item>
      <title>Convert logit to probability</title>
      <link>https://data-se.netlify.app/2017/01/24/convert_logit2prob/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/01/24/convert_logit2prob/</guid>
      <description>Logistic regression may give a headache initially. While the structure and idea is the same as &amp;ldquo;normal&amp;rdquo; regression, the interpretation of the b&amp;rsquo;s (ie., the regression coefficients) can be more challenging.
This post provides a convenience function for converting the output of the glm function to a probability. Or more generally, to convert logits (that&amp;rsquo;s what spit out by glm) to a probabilty.
Note1: The objective of this post is to explain the mechanics of logits.</description>
    </item>
    
    <item>
      <title>Gentle intro to &#39;R-squared equals squared r&#39;</title>
      <link>https://data-se.netlify.app/2017/01/20/rsquared/</link>
      <pubDate>Fri, 20 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/01/20/rsquared/</guid>
      <description>It comes as no surprise that $$R^2$$ (&amp;ldquo;coefficient of determination&amp;rdquo;) equals $$r^2$$ in simple regression (predictor X, criterion Y), where $$r(X,Y)$$ is Pearson&amp;rsquo;s correlation coefficient. $$R^2$$ equals the fraction of explained variance in a simple regression. However, the statistical (mathematical) background is often less clear or buried in less-intuitive formula.
The goal of this post is to offer a gentle explanantion why
$$R^2 = r^2$$,
where $$r$$ is $$r(Y,\hat{Y})$$ and $$\hat{Y}$$ are the predicted values.</description>
    </item>
    
    <item>
      <title>How to import a strange CSV</title>
      <link>https://data-se.netlify.app/2017/01/12/strange_csvs/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/01/12/strange_csvs/</guid>
      <description>A typical task in data analysis is to import CSV-formatted data. CSV is nothing more than a text file with data in rectangular form; rows stand for observations (eg., persons), and columns represent variables (such as age). Columns are separed by a &amp;ldquo;separator&amp;rdquo;, often a comma. Hence the name &amp;ldquo;CSV&amp;rdquo; - &amp;ldquo;comma separeted values&amp;rdquo;. Note however that the separator can in principle anything you like (eg., &amp;ldquo;;&amp;rdquo; or tabulator or &amp;quot; &amp;ldquo;).</description>
    </item>
    
    <item>
      <title>Why is the variance additive? An intuition.</title>
      <link>https://data-se.netlify.app/2017/01/04/additivity_variance/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2017/01/04/additivity_variance/</guid>
      <description>The variance of some data can be defined in rough terms as the mean of the squared deviations from the mean.
Let&amp;rsquo;s repeat that because it is important:
Variance: Mean of squared deviations from the mean.
An example helps to illustrate. Assume some class of students are forced to write an exam in a statistics class (OMG). Let&amp;rsquo;s say the grades range fom 1 to 6, 1 being the best and 6 the worst.</description>
    </item>
    
    <item>
      <title>Simulation of p-values</title>
      <link>https://data-se.netlify.app/2016/12/01/simu_p/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2016/12/01/simu_p/</guid>
      <description>Teaching or learning stats can be a challenging endeavor. In my experience, starting with concrete (as opposed to abstract) examples helps many a learner. What also helps (for me) is visualizing.
As p-values are still part and parcel of probably any given stats curriculum, here is a convenient function to simulate p-values and to plot them.
&amp;ldquo;Simulating p-values&amp;rdquo; amounts to drawing many samples from a given, specified population (eg., µ=100, s=15, normally distributed).</description>
    </item>
    
  </channel>
</rss>
