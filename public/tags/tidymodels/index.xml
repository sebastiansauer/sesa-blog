<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidymodels on sesa blog</title>
    <link>https://data-se.netlify.app/tags/tidymodels/</link>
    <description>Recent content in tidymodels on sesa blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://data-se.netlify.app/tags/tidymodels/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Speed test for parallel processing </title>
      <link>https://data-se.netlify.app/2023/11/15/speed-test-for-parallel-processing/</link>
      <pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2023/11/15/speed-test-for-parallel-processing/</guid>
      <description>0.0.1 How fast is fast? 0.0.2 Tidymodels pipeline 0.0.3 Setup 0.0.4 Simple Fit 0.0.5 Resampling 0.0.6 Tuning 0.0.7 More tuning params 0.0.8 Parallel processing 0.0.9 Parallel processing - explicitly 0.0.10 ANOVA race 0.0.11 Acknowledgements 0.0.12 Reproducibility 0.0.1 How fast is fast? Let’s see how quickly some predictive model runs, in order to estimate time consumption for larger machine learning pipelines. In addtion, let’s see how much time is saves when using multiples cores, ie.</description>
    </item>
    
    <item>
      <title>Minimal tidymodels example with the Lasso</title>
      <link>https://data-se.netlify.app/2022/07/24/minimal-tidymodels-example-with-the-lasso/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/07/24/minimal-tidymodels-example-with-the-lasso/</guid>
      <description>1 Intro 2 Load packages 3 Data 4 Minimal code for fitting a model 5 Results 6 Reproducibility 1 Intro In this post, we try to find a minimal setup for running/fitting a predictive model using the tidymodels approach.
2 Load packages library(tidyverse) # data wrangling library(tidymodels) 3 Data data(&amp;quot;penguins&amp;quot;, package = &amp;quot;modeldata&amp;quot;) 4 Minimal code for fitting a model m1 &amp;lt;- linear_reg(engine = &amp;quot;glmnet&amp;quot;, penalty = 1, mixture = 1) %&amp;gt;% fit(body_mass_g ~ .</description>
    </item>
    
    <item>
      <title>Penguins Lasso with Tidymodels</title>
      <link>https://data-se.netlify.app/2022/07/24/penguins-lasso-with-tidymodels/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/07/24/penguins-lasso-with-tidymodels/</guid>
      <description>1 Load packages 2 Data 3 A bit more than minimal 4 Results 5 Extract fit 6 Reproducibility 1 Load packages library(tidyverse) # data wrangling library(tidymodels) 2 Data data(&amp;quot;penguins&amp;quot;, package = &amp;quot;modeldata&amp;quot;) 3 A bit more than minimal rec1 &amp;lt;- recipe(body_mass_g ~ ., data = penguins) %&amp;gt;% step_dummy(all_nominal()) %&amp;gt;% step_normalize(all_numeric_predictors()) %&amp;gt;% step_nzv(all_numeric_predictors()) %&amp;gt;% step_naomit(all_predictors()) Checks:
summary(rec1) #&amp;gt; # A tibble: 7 × 4 #&amp;gt; variable type role source #&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; #&amp;gt; 1 species nominal predictor original #&amp;gt; 2 island nominal predictor original #&amp;gt; 3 bill_length_mm numeric predictor original #&amp;gt; 4 bill_depth_mm numeric predictor original #&amp;gt; 5 flipper_length_mm numeric predictor original #&amp;gt; 6 sex nominal predictor original #&amp;gt; 7 body_mass_g numeric outcome original tidy(rec1) #&amp;gt; # A tibble: 5 × 6 #&amp;gt; number operation type trained skip id #&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt; #&amp;gt; 1 1 step dummy FALSE FALSE dummy_rc5a2 #&amp;gt; 2 2 step normalize FALSE FALSE normalize_U3yg4 #&amp;gt; 3 3 step nzv FALSE FALSE nzv_vruQ8 #&amp;gt; 4 4 step naomit FALSE TRUE naomit_PqP3J #&amp;gt; 5 5 step novel FALSE FALSE novel_6pjBL rec1 %&amp;gt;% prep() %&amp;gt;% bake(new_data = NULL) %&amp;gt;% head() #&amp;gt; # A tibble: 6 × 9 #&amp;gt; bill_length_mm bill_depth_mm flipper_length_mm body_mass_g species_Chinstrap #&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; #&amp;gt; 1 -0.</description>
    </item>
    
  </channel>
</rss>
