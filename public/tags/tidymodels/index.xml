<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tidymodels on sesa blog</title>
    <link>https://data-se.netlify.app/tags/tidymodels/</link>
    <description>Recent content in Tidymodels on sesa blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://data-se.netlify.app/tags/tidymodels/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Speed test for parallel processing </title>
      <link>https://data-se.netlify.app/2023/11/15/speed-test-for-parallel-processing/</link>
      <pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2023/11/15/speed-test-for-parallel-processing/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#how-fast-is-fast&#34; id=&#34;toc-how-fast-is-fast&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; How fast is fast?&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#tidymodels-pipeline&#34; id=&#34;toc-tidymodels-pipeline&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; Tidymodels pipeline&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#setup&#34; id=&#34;toc-setup&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; Setup&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#simple-fit&#34; id=&#34;toc-simple-fit&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; Simple Fit&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#resampling&#34; id=&#34;toc-resampling&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.5&lt;/span&gt; Resampling&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#tuning&#34; id=&#34;toc-tuning&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.6&lt;/span&gt; Tuning&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#more-tuning-params&#34; id=&#34;toc-more-tuning-params&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.7&lt;/span&gt; More tuning params&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#parallel-processing&#34; id=&#34;toc-parallel-processing&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.8&lt;/span&gt; Parallel processing&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#parallel-processing---explicitly&#34; id=&#34;toc-parallel-processing---explicitly&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.9&lt;/span&gt; Parallel processing - explicitly&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#anova-race&#34; id=&#34;toc-anova-race&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.10&lt;/span&gt; ANOVA race&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#acknowledgements&#34; id=&#34;toc-acknowledgements&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.11&lt;/span&gt; Acknowledgements&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#reproducibility&#34; id=&#34;toc-reproducibility&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.12&lt;/span&gt; Reproducibility&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;div id=&#34;how-fast-is-fast&#34; class=&#34;section level3&#34; number=&#34;0.0.1&#34;&gt;&#xD;&#xA;&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; How fast is fast?&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Let’s see how quickly some predictive model runs, in order to estimate time consumption for larger machine learning pipelines.&#xD;&#xA;In addtion, let’s see how much time is saves when using multiples cores, ie. when parallel processing is enabled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Minimal tidymodels example with the Lasso</title>
      <link>https://data-se.netlify.app/2022/07/24/minimal-tidymodels-example-with-the-lasso/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2022/07/24/minimal-tidymodels-example-with-the-lasso/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#intro&#34; id=&#34;toc-intro&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Intro&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#load-packages&#34; id=&#34;toc-load-packages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Load packages&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#data&#34; id=&#34;toc-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Data&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#minimal-code-for-fitting-a-model&#34; id=&#34;toc-minimal-code-for-fitting-a-model&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Minimal code for fitting a model&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#results&#34; id=&#34;toc-results&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; Results&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#reproducibility&#34; id=&#34;toc-reproducibility&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; Reproducibility&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;div id=&#34;intro&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Intro&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;In this post, we try to find a minimal setup for running/fitting a predictive model using the tidymodels approach.&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;load-packages&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Load packages&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)  # data wrangling&#xD;&#xA;library(tidymodels)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;data&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Data&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(&amp;quot;penguins&amp;quot;, package = &amp;quot;modeldata&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;minimal-code-for-fitting-a-model&#34; class=&#34;section level1&#34; number=&#34;4&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Minimal code for fitting a model&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m1 &amp;lt;- linear_reg(engine = &amp;quot;glmnet&amp;quot;, penalty = 1, mixture = 1) %&amp;gt;% &#xD;&#xA;  fit(body_mass_g ~ ., data = penguins)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;Note that, for simplicity, we do not care about cross-validation, tuning and preprocessing.&#xD;&#xA;In particular, we should normalize the metric predictors and dummytize the nominmal predictors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Penguins Lasso with Tidymodels</title>
      <link>https://data-se.netlify.app/2022/07/24/penguins-lasso-with-tidymodels/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2022/07/24/penguins-lasso-with-tidymodels/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#load-packages&#34; id=&#34;toc-load-packages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Load packages&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#data&#34; id=&#34;toc-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Data&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#a-bit-more-than-minimal&#34; id=&#34;toc-a-bit-more-than-minimal&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; A bit more than minimal&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#results&#34; id=&#34;toc-results&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Results&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#extract-fit&#34; id=&#34;toc-extract-fit&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; Extract fit&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#reproducibility&#34; id=&#34;toc-reproducibility&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; Reproducibility&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;div id=&#34;load-packages&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Load packages&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)  # data wrangling&#xD;&#xA;library(tidymodels)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;data&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Data&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(&amp;quot;penguins&amp;quot;, package = &amp;quot;modeldata&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;a-bit-more-than-minimal&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; A bit more than minimal&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rec1 &amp;lt;-&#xD;&#xA;  recipe(body_mass_g ~ ., data = penguins) %&amp;gt;% &#xD;&#xA;  step_dummy(all_nominal()) %&amp;gt;% &#xD;&#xA;  step_normalize(all_numeric_predictors()) %&amp;gt;% &#xD;&#xA;  step_nzv(all_numeric_predictors()) %&amp;gt;% &#xD;&#xA;  step_naomit(all_predictors())&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;Checks:&lt;/p&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(rec1)&#xD;&#xA;#&amp;gt; # A tibble: 7 × 4&#xD;&#xA;#&amp;gt;   variable          type    role      source  &#xD;&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;             &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;   &#xD;&#xA;#&amp;gt; 1 species           nominal predictor original&#xD;&#xA;#&amp;gt; 2 island            nominal predictor original&#xD;&#xA;#&amp;gt; 3 bill_length_mm    numeric predictor original&#xD;&#xA;#&amp;gt; 4 bill_depth_mm     numeric predictor original&#xD;&#xA;#&amp;gt; 5 flipper_length_mm numeric predictor original&#xD;&#xA;#&amp;gt; 6 sex               nominal predictor original&#xD;&#xA;#&amp;gt; 7 body_mass_g       numeric outcome   original&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy(rec1)&#xD;&#xA;#&amp;gt; # A tibble: 5 × 6&#xD;&#xA;#&amp;gt;   number operation type      trained skip  id             &#xD;&#xA;#&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;lgl&amp;gt;   &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt;          &#xD;&#xA;#&amp;gt; 1      1 step      dummy     FALSE   FALSE dummy_rc5a2    &#xD;&#xA;#&amp;gt; 2      2 step      normalize FALSE   FALSE normalize_U3yg4&#xD;&#xA;#&amp;gt; 3      3 step      nzv       FALSE   FALSE nzv_vruQ8      &#xD;&#xA;#&amp;gt; 4      4 step      naomit    FALSE   TRUE  naomit_PqP3J   &#xD;&#xA;#&amp;gt; 5      5 step      novel     FALSE   FALSE novel_6pjBL&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rec1 %&amp;gt;% &#xD;&#xA;  prep() %&amp;gt;% &#xD;&#xA;  bake(new_data = NULL) %&amp;gt;% &#xD;&#xA;  head()&#xD;&#xA;#&amp;gt; # A tibble: 6 × 9&#xD;&#xA;#&amp;gt;   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g species_Chinstrap&#xD;&#xA;#&amp;gt;            &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt;       &amp;lt;int&amp;gt;             &amp;lt;dbl&amp;gt;&#xD;&#xA;#&amp;gt; 1         -0.883         0.784            -1.42         3750            -0.496&#xD;&#xA;#&amp;gt; 2         -0.810         0.126            -1.06         3800            -0.496&#xD;&#xA;#&amp;gt; 3         -0.663         0.430            -0.421        3250            -0.496&#xD;&#xA;#&amp;gt; 4         -1.32          1.09             -0.563        3450            -0.496&#xD;&#xA;#&amp;gt; 5         -0.847         1.75             -0.776        3650            -0.496&#xD;&#xA;#&amp;gt; 6         -0.920         0.329            -1.42         3625            -0.496&#xD;&#xA;#&amp;gt; # … with 4 more variables: species_Gentoo &amp;lt;dbl&amp;gt;, island_Dream &amp;lt;dbl&amp;gt;,&#xD;&#xA;#&amp;gt; #   island_Torgersen &amp;lt;dbl&amp;gt;, sex_male &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wf1 &amp;lt;-&#xD;&#xA;  workflow() %&amp;gt;% &#xD;&#xA;  add_model(spec = linear_reg(engine = &amp;quot;glmnet&amp;quot;, mixture = 1, penalty = 1)) %&amp;gt;% &#xD;&#xA;  add_recipe(recipe = rec1)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m2 &amp;lt;- wf1 %&amp;gt;% &#xD;&#xA;  fit(data = penguins)&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;results&#34; class=&#34;section level1&#34; number=&#34;4&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Results&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy(m2)&#xD;&#xA;#&amp;gt; # A tibble: 9 × 3&#xD;&#xA;#&amp;gt;   term              estimate penalty&#xD;&#xA;#&amp;gt;   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;&#xD;&#xA;#&amp;gt; 1 (Intercept)        4208.         1&#xD;&#xA;#&amp;gt; 2 bill_length_mm       96.0        1&#xD;&#xA;#&amp;gt; 3 bill_depth_mm       123.         1&#xD;&#xA;#&amp;gt; 4 flipper_length_mm   232.         1&#xD;&#xA;#&amp;gt; 5 species_Chinstrap  -101.         1&#xD;&#xA;#&amp;gt; 6 species_Gentoo      465.         1&#xD;&#xA;#&amp;gt; 7 island_Dream         -5.44       1&#xD;&#xA;#&amp;gt; 8 island_Torgersen    -15.3        1&#xD;&#xA;#&amp;gt; 9 sex_male            197.         1&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;In case some predictor beta has been shrunken to zero, it would be noted here.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
