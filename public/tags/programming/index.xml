<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on sesa blog</title>
    <link>https://data-se.netlify.app/tags/programming/</link>
    <description>Recent content in Programming on sesa blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Mar 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://data-se.netlify.app/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Programming the tidyverse: quoted and unqouted parameters</title>
      <link>https://data-se.netlify.app/2022/03/11/programming-the-tidyverse-quoted-and-unqouted-parameters/</link>
      <pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2022/03/11/programming-the-tidyverse-quoted-and-unqouted-parameters/</guid>
      <description>&lt;script src=&#34;https://data-se.netlify.app/2022/03/11/programming-the-tidyverse-quoted-and-unqouted-parameters/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&#xD;&#xA;&lt;div id=&#34;TOC&#34;&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#load-packages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Load packages&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#motivation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Motivation&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#first-quoted-string-parameter&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; First: Quoted (string) parameter&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#second-unquoted-parameter&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Second: Unquoted parameter&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#check&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; Check&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;li&gt;&lt;a href=&#34;#bonus&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; Bonus&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;div id=&#34;load-packages&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Load packages&lt;/h1&gt;&#xD;&#xA;&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)  # data wrangling&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;motivation&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;&#xD;&#xA;&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Motivation&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;If a project reaches some level of complexity, sooner or later, more systematical meausures of coding need to be employed.&lt;/p&gt;&#xD;&#xA;&lt;p&gt;Using the tidyverse ecosystem, programming - instead of interactive use -&#xD;&#xA;may be something different or unusual and it may take some time to wrap your head around it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming with dplyr: Part 03, working with strings</title>
      <link>https://data-se.netlify.app/2017/08/09/dplyr_strings/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2017/08/09/dplyr_strings/</guid>
      <description>&lt;h1 id=&#34;more-on-programming-with-dplyr-converting-quosures-to-strings&#34;&gt;More on programming with dplyr: converting quosures to strings&lt;/h1&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;https://sebastiansauer.github.io/prop_fav/&#34;&gt;this&lt;/a&gt; post, we have programmed a simple function using dplyr&amp;rsquo;s programming capabilities based on &lt;a href=&#34;https://cran.r-project.org/web/packages/rlang/vignettes/tidy-evaluation.html&#34;&gt;tidyeval&lt;/a&gt;; for more intro to programming with dplyr, see &lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll go one step further and programm a function where a quosure will be turned to a string. Why this? Because quite a number of functions out there except strings as input parameters.&lt;/p&gt;&#xA;&lt;h1 id=&#34;libraries&#34;&gt;Libraries&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;data-example&#34;&gt;Data example&lt;/h1&gt;&#xA;&lt;p&gt;Say, we have a string where we search for a word stem. However this stem does not appear in its &amp;ldquo;stem&amp;rdquo; form, but always with some suffixes. Let our stem be &amp;ldquo;spd&amp;rdquo; (the name of the German Social-Democratic party), and (for simplicity), we&amp;rsquo;ll assume two &amp;ldquo;instances&amp;rdquo; of &amp;ldquo;spd&amp;rdquo; that occurr &lt;em&gt;with&lt;/em&gt; suffix, ie., &amp;ldquo;spdbt&amp;rdquo; and &amp;ldquo;spdde&amp;rdquo;. (I was just working on a text mining on Tweets of German politiicians, hence the example).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming with dplyr: Part 02, writing a function</title>
      <link>https://data-se.netlify.app/2017/07/06/prop_fav/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2017/07/06/prop_fav/</guid>
      <description>&lt;p&gt;Recently, since &lt;code&gt;dplyr&lt;/code&gt; &amp;lt;= 0.6.0 a new way of dealing with &lt;a href=&#34;http://adv-r.had.co.nz/Computing-on-the-language.html&#34;&gt;NSE&lt;/a&gt; was introduced, called &lt;a href=&#34;https://cran.r-project.org/web/packages/rlang/vignettes/tidy-evaluation.html&#34;&gt;tidyeval&lt;/a&gt;. As with every topic that begs our attention, the question &amp;ldquo;why bother&amp;rdquo; is in place. &lt;del&gt;The&lt;/del&gt;one answer is &amp;ldquo;you&amp;rsquo;ll need this stuff if you want to lock dplyr verbs inside a function&amp;rdquo;. Once you like &lt;code&gt;dplyr&lt;/code&gt; and friends, a natural second step is to use the ideas not only for interactive use, but for more &amp;ldquo;programming&amp;rdquo; type, ie., writing functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A second look to grouping with dplyr</title>
      <link>https://data-se.netlify.app/2017/06/28/second_look_group_by/</link>
      <pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2017/06/28/second_look_group_by/</guid>
      <description>&lt;p&gt;&lt;del&gt;The&lt;/del&gt; one basic idea of dplyr is that each function should focus on one job. That&amp;rsquo;s why there are no functions such as &lt;code&gt;compute_sumamries_by_group_with_robust_variants(df)&lt;/code&gt;. Rather, summarising and grouping are seen as different jobs which should be accomplished by different functions. And, in turn, that&amp;rsquo;s why &lt;code&gt;group_by&lt;/code&gt;, the grouping function of dplyr, is of considerable importance: this function should do the grouping for each operation whatsoever.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s load all tidyverse libraries in one go:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming with dplyr: Part 01, introduction</title>
      <link>https://data-se.netlify.app/2017/06/28/prog_dplyr_01/</link>
      <pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://data-se.netlify.app/2017/06/28/prog_dplyr_01/</guid>
      <description>&lt;p&gt;Like for [others], Hadley Wickham&amp;rsquo;s &lt;code&gt;dplyr&lt;/code&gt;, and more generally, the &lt;code&gt;tidyverse&lt;/code&gt; approach has considerably changed the I do data analyses. Most notably, the pipe (coming from &lt;code&gt;magrittr&lt;/code&gt; by Stefan Milton Bache, see &lt;a href=&#34;https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html&#34;&gt;here&lt;/a&gt;) has creeped into nearly every analyses I, do.&lt;/p&gt;&#xA;&lt;p&gt;That is, is every analyses &lt;em&gt;except for&lt;/em&gt; functions, and other non-interactive stuff. In those programming contexts, the dplyr way does not work, due to its &lt;a href=&#34;http://adv-r.had.co.nz/Computing-on-the-language.html&#34;&gt;non standard evaluation&lt;/a&gt; or NSE for short.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
