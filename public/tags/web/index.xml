<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on sesa blog</title>
    <link>https://data-se.netlify.app/tags/web/</link>
    <description>Recent content in web on sesa blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://data-se.netlify.app/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Accessing Google Trends</title>
      <link>https://data-se.netlify.app/2022/11/04/accessing-google-trends/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2022/11/04/accessing-google-trends/</guid>
      <description>1 Load packages 2 Motivation 3 Restrictions and quotas 4 Access via R 5 Options 6 Get data 7 Plot it 8 Reproducibility 1 Load packages library(tidyverse) # data wrangling 2 Motivation Google Trends is, according to Wikipedia:
Google Trends is a website by Google that analyzes the popularity of top search queries in Google Search across various regions and languages. The website uses graphs to compare the search volume of different queries over time.</description>
    </item>
    
    <item>
      <title>Zeitungsartikel per API herunterladen</title>
      <link>https://data-se.netlify.app/2021/07/07/zeitungsartikel-per-api-herunterladen/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://data-se.netlify.app/2021/07/07/zeitungsartikel-per-api-herunterladen/</guid>
      <description>library(tidyverse) library(newsanchor) library(printr) library(httr) library(jsonlite) News API Es gibt eine Seite News API, die es erlaubt, per API News (Artikel, Schlagzeilen) von weltweiten Quellen herunterzuladen, per JSON API.
Gibt’s da auch ein R-Paket? Ja - NewsAnchor.
Setup Zuerst muss man sich bei der Seite eine API Key holen, für Entwicklerzwecke kostenlos. Komfortabel ist, sich den Schlüssel in die R-environment-Datei (.Renviron) zu schreiben, s. hier für mehr Infos.
Das kann man z.</description>
    </item>
    
  </channel>
</rss>
